
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int map[450][450];
int map2[450][450];
int visit[50][50];
int cntmap[450][450];
int n, m, k;
int dy[4] = { 0,0,1,-1 };
int dx[4] = { 1,-1,0,0 };
void cntprintf()
{
	printf("\n");
	printf("cntprint\n");
	for (int i = 195; i < n + 205; i++)
	{
		for (int j = 195; j < m + 205; j++)
		{
			printf("%d ",cntmap[i][j]);
		}
		printf("\n");
	}
	printf("%d\n",10-k);
}

void mapprintf()
{
	printf("\n");
	printf("mapprint\n");
	for (int i = 195; i < n + 205; i++)
	{
		for (int j = 195; j < m + 205; j++)
		{
			printf("%d ", map2[i][j]);
		}
		printf("\n");
	}
	printf("%d\n", 10-k);
}
void init()
{
	for (int i = 0; i < 450; i++)
	{
		for (int j = 0; j < 450; j++)
		{
			map2[i][j] = 0;
		}
	}
}
void trans()
{
	for (int i = 0; i < 450; i++)
	{
		for (int j = 0; j < 450; j++)
		{
			map[i][j]=map2[i][j];
		}
	}
}

void active()
{
	for (int i = 0; i < 450; i++)
	{
		for (int j = 0; j < 450; j++)
		{
			if (map[i][j] > 0)
			{
				if (map[i][j] == cntmap[i][j])
				{
					printf("(%d, %d) = %d\n", i, j, map[i][j]);
					for (int q = 0; q < 4; q++)
					{
						int ny = i + dy[q];
						int nx = j + dx[q];
						if (ny < 0 || nx < 0 || ny >= 450 || nx >= 450 || map[ny][nx] != 0) continue;
						//printf("2 (%d %d) %d\n", ny, nx, map[ny][nx]);
						map2[ny][nx] = map[i][j];
					}
					map2[i][j] = -1;
					
				}
			}
		}
	}
}
int main()
{
	int t;
	scanf("%d",&t);
	
	for (int i = 1; i <= t; i++)
	{
		int sum = 0;
		scanf("%d %d %d",&n,&m,&k);
		for (int i = 200; i < n+ 200; i++)
		{
			for (int j = 200; j < m+ 200; j++)
			{
				scanf("%d",&map[i][j]);
			}
		}
		while(k)
		{
			init();
			active();
			--k;
			mapprintf();
			cntprintf();
			for (int i = 0; i < 450; i++)
			{
				for (int j = 0; j < 450; j++)
				{
					if (map2[i][j] == -1)
					{
						cntmap[i][j] = -1;
					}
					else if (map2[i][j] > 0)
					{
						cntmap[i][j] += 1;
					}
				}
			}
			--k;
			mapprintf();
			cntprintf();
			trans();

		}
		//mapprintf();
		//cntprintf();
		for (int i = 0; i < 450; i++)
		{
			for (int j = 0; j < 450; j++)
			{
				//printf("%d",map[i][j]);
				if(map[i][j]>0)
				sum += map[i][j];
			}
			//printf("\n");
		}
		printf("%d",sum);


	}




	return 0;
}
